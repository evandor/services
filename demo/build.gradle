buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.skysail'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

buildScan { licenseAgreementUrl = 'https://gradle.com/terms-of-service'; licenseAgree = 'yes' }


dependencies {

    compile "org.scala-lang:scala-library:${scala_version}"
    compile "org.scala-lang:scala-reflect:${scala_version}"


    compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.flywaydb:flyway-core')
	runtime('org.springframework.boot:spring-boot-devtools')
	//runtime('mysql:mysql-connector-java')
	runtime("com.h2database:h2")
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

//sourceSets.main.scala.srcDir "src/main/java"
//sourceSets.main.java.srcDirs = []

sourceSets {
	main {
		scala {
			srcDirs = ['src/main/java']
		}
		java {
			srcDirs = [] // make java and scala work togeher: https://discuss.gradle.org/t/how-to-compile-a-java-class-that-depends-on-a-scala-class-in-gradle/6747

		}
	}
	test {
		scala {
			srcDirs = ['test']
		}
	}
}